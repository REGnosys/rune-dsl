name: Build main branch and upload dependency graph

on:
  push:
    branches: [ main ]

# Cancel previous jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build and publish with Maven (composite action)
        uses: ./.github/actions/maven-build
        with:
          build-command: install org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish -P release
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
          CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
          RUNE_GPG_PRIVATE_KEY: ${{ secrets.RUNE_GPG_PRIVATE_KEY }}
          RUNE_GPG_PASSPHRASE: ${{ secrets.RUNE_GPG_PASSPHRASE }}

  wait-for-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Poll for release availability
        run: |
          GROUP_ID="org/finos/rune"
          ARTIFACT_ID="rune-runtime"
          VERSION="0.0.0.main-SNAPSHOT"

          URL="https://central.sonatype.com/repository/maven-snapshots/$GROUP_ID/$ARTIFACT_ID/$VERSION/maven-metadata.xml"

          echo "Polling $URL"
          for i in {1..30}; do
            if curl --silent --head --fail "$URL" > /dev/null; then
              echo "Release $VERSION is available!"
              exit 0
            fi
            echo "Not yet... waiting 20s"
            sleep 20
          done
          echo "Release not available after 10 minutes"
          exit 1

  build-and-publish-backport:
    needs: wait-for-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Publish Rosetta Backport
        uses: ./.github/actions/maven-build
        with:
          working-directory: rosetta-backport
          build-command: install org.sonatype.central:central-publishing-maven-plugin:0.7.0:publish -P release
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
          CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
          RUNE_GPG_PRIVATE_KEY: ${{ secrets.RUNE_GPG_PRIVATE_KEY }}
          RUNE_GPG_PASSPHRASE: ${{ secrets.RUNE_GPG_PASSPHRASE }}

  upload-dependency-graph:
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - uses: actions/checkout@v5
      # Upload full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v5
